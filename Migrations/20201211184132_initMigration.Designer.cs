// <auto-generated />
using System;
using ASP_React.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP_React.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201211184132_initMigration")]
    partial class initMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ASP_React.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "TODOs"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "In Progress"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Complete"
                        });
                });

            modelBuilder.Entity("ASP_React.Models.Task", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Category = "TODOs",
                            Content = "Add data...",
                            Title = "Implement DbContext"
                        },
                        new
                        {
                            Id = (byte)2,
                            Category = "In Progress",
                            Content = "Add data...",
                            Title = "Implement React DnD"
                        },
                        new
                        {
                            Id = (byte)3,
                            Category = "Complete",
                            Content = "Add data...",
                            Title = "Implement Login"
                        });
                });

            modelBuilder.Entity("ASP_React.Models.Task", b =>
                {
                    b.HasOne("ASP_React.Models.Category", null)
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("ASP_React.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
